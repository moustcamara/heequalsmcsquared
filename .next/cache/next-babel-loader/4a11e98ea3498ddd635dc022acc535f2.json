{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { getHomePageAPI, getBlogPostsAPI } from '../api'; // We create this in just a tick\n\nimport { linkResolver } from '../helpers';\nimport { RichText } from 'prismic-reactjs';\n/**\r\n* As you can see we are importing our layout here,\r\n* and below we wrap all of the page in it.\r\n*/\n\nimport DefaultLayout from '../layouts';\n\nconst Index = ({\n  home = []\n}) => __jsx(DefaultLayout, null, home.map(homepage => __jsx(\"div\", null, __jsx(\"div\", {\n  className: \"row\"\n}, homepage.data.body.filter(slice => slice.slice_type == \"profile_card\").map(profile => {\n  profile = profile.primary;\n  return __jsx(\"div\", {\n    className: \"profile-card col-md-6 border-right\"\n  }, __jsx(\"div\", {\n    className: \"profile-card__text text-center my-5\"\n  }, __jsx(\"h1\", {\n    className: \"profile-card__title display-1 font-weight-bold\"\n  }, RichText.asText(profile.profile_title)), __jsx(\"p\", {\n    className: \"profile-card__subtitle h3\"\n  }, RichText.asText(profile.profile_subtitle))), __jsx(\"div\", {\n    className: \"profile-card__image text-center\"\n  }, __jsx(\"img\", {\n    src: profile.profile_image.url,\n    width: \"600\"\n  })));\n}), homepage.data.body.filter(slice => slice.slice_type == \"tracklist\").map(tracklist => __jsx(\"div\", {\n  className: \"tracklist-card col-md-6\"\n}, tracklist.items.map((track, index) => {\n  return __jsx(\"li\", null, RichText.asText(track.track_title));\n})))), __jsx(\"div\", null, JSON.stringify(homepage.data)))));\n\nIndex.getInitialProps = async () => {\n  // Here we call the API and request 5 documents\n  const response = await getHomePageAPI({\n    pageSize: 1\n  });\n  return {\n    home: response.results\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Moustapha Camara/Dropbox/MOUST MUSIC/HeEqualsMCSquared Website/Development/heequalsmcsquared/pages/index.js"],"names":["Link","getHomePageAPI","getBlogPostsAPI","linkResolver","RichText","DefaultLayout","Index","home","map","homepage","data","body","filter","slice","slice_type","profile","primary","asText","profile_title","profile_subtitle","profile_image","url","tracklist","items","track","index","track_title","JSON","stringify","getInitialProps","response","pageSize","results"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,QAAhD,C,CACA;;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA;;;;;AAIA,OAAOC,aAAP,MAA0B,YAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG;AAAT,CAAD,KACZ,MAAC,aAAD,QACKA,IAAI,CAACC,GAAL,CAASC,QAAQ,IAEhB,mBACC;AAAK,EAAA,SAAS,EAAC;AAAf,GACCA,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,KAAK,IAAIA,KAAK,CAACC,UAAN,IAAoB,cAAvD,EAAuEN,GAAvE,CAA2EO,OAAO,IAAI;AACpFA,EAAAA,OAAO,GAAGA,OAAO,CAACC,OAAlB;AACA,SACG;AAAK,IAAA,SAAS,EAAC;AAAf,KACG;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,KAAgEZ,QAAQ,CAACa,MAAT,CAAgBF,OAAO,CAACG,aAAxB,CAAhE,CADF,EAEE;AAAG,IAAA,SAAS,EAAC;AAAb,KAA0Cd,QAAQ,CAACa,MAAT,CAAgBF,OAAO,CAACI,gBAAxB,CAA1C,CAFF,CADH,EAKG;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,GAAG,EAAEJ,OAAO,CAACK,aAAR,CAAsBC,GAAhC;AAAqC,IAAA,KAAK,EAAC;AAA3C,IADF,CALH,CADH;AAWD,CAbD,CADD,EAeEZ,QAAQ,CAACC,IAAT,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,KAAK,IAAIA,KAAK,CAACC,UAAN,IAAoB,WAAvD,EAAoEN,GAApE,CAAwEc,SAAS,IAC9E;AAAK,EAAA,SAAS,EAAC;AAAf,GACKA,SAAS,CAACC,KAAV,CAAgBf,GAAhB,CAAqB,CAACgB,KAAD,EAAQC,KAAR,KAAkB;AACpC,SACE,kBAAKrB,QAAQ,CAACa,MAAT,CAAgBO,KAAK,CAACE,WAAtB,CAAL,CADF;AAGH,CAJA,CADL,CADH,CAfF,CADD,EA0BC,mBAAMC,IAAI,CAACC,SAAL,CAAenB,QAAQ,CAACC,IAAxB,CAAN,CA1BD,CAFD,CADL,CADF;;AAoCAJ,KAAK,CAACuB,eAAN,GAAwB,YAAY;AAClC;AACA,QAAMC,QAAQ,GAAG,MAAM7B,cAAc,CAAC;AAAE8B,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAArC;AACA,SAAO;AACLxB,IAAAA,IAAI,EAAEuB,QAAQ,CAACE;AADV,GAAP;AAGD,CAND;;AAQA,eAAe1B,KAAf","sourcesContent":["import Link from 'next/link';\r\nimport { getHomePageAPI, getBlogPostsAPI } from '../api';\r\n// We create this in just a tick\r\nimport { linkResolver } from '../helpers';\r\n\r\nimport { RichText } from 'prismic-reactjs';\r\n/**\r\n* As you can see we are importing our layout here,\r\n* and below we wrap all of the page in it.\r\n*/\r\nimport DefaultLayout from '../layouts';\r\n\r\nconst Index = ({ home = [] }) => (\r\n  <DefaultLayout>\r\n      {home.map(homepage => (\r\n\r\n        <div>\r\n         <div className=\"row\">\r\n         {homepage.data.body.filter(slice => slice.slice_type == \"profile_card\").map(profile => {\r\n            profile = profile.primary;\r\n            return (\r\n               <div className=\"profile-card col-md-6 border-right\">                 \r\n                  <div className=\"profile-card__text text-center my-5\">\r\n                    <h1 className=\"profile-card__title display-1 font-weight-bold\">{RichText.asText(profile.profile_title)}</h1>\r\n                    <p className=\"profile-card__subtitle h3\">{RichText.asText(profile.profile_subtitle)}</p>\r\n                  </div>\r\n                  <div className=\"profile-card__image text-center\">\r\n                    <img src={profile.profile_image.url} width=\"600\"/>\r\n                  </div>\r\n               </div>\r\n            )\r\n          })}\r\n          {homepage.data.body.filter(slice => slice.slice_type == \"tracklist\").map(tracklist => (\r\n              <div className=\"tracklist-card col-md-6\">\r\n                  {tracklist.items.map( (track, index) => {\r\n                      return (\r\n                        <li>{RichText.asText(track.track_title)}</li>\r\n                      )\r\n                  })}           \r\n              </div>\r\n          ))}  \r\n         </div>\r\n         <div>{JSON.stringify(homepage.data)}</div>         \r\n        </div>\r\n      ))}\r\n  </DefaultLayout>\r\n);\r\n\r\nIndex.getInitialProps = async () => {\r\n  // Here we call the API and request 5 documents\r\n  const response = await getHomePageAPI({ pageSize: 1 });\r\n  return {\r\n    home: response.results\r\n  };\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}