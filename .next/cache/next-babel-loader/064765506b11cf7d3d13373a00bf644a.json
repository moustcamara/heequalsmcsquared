{"ast":null,"code":"var __jsx = React.createElement;\nimport Link from 'next/link';\nimport { getHomePageAPI, getBlogPostsAPI } from '../api'; // We create this in just a tick\n\nimport { linkResolver } from '../helpers';\nimport { RichText } from 'prismic-reactjs';\nimport React, { Component } from 'react';\nimport ProfileCard from '../components/ProfileCard.js';\nimport TracksCard from '../components/TracksCard.js';\n/**\r\n* As you can see we are importing our layout here,\r\n* and below we wrap all of the page in it.\r\n*/\n\nimport DefaultLayout from '../layouts';\n\nfunction getTime(time) {\n  if (!isNaN(time)) {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }\n}\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setTrack = this.setTrack.bind(this);\n    this.state = {\n      value: null,\n      selectedTrack: null,\n      selectedTrackName: 'default',\n      selectedTrackNumber: null,\n      selectedTrackFile: null,\n      player: \"stopped\",\n      currentTime: null,\n      duration: null\n    };\n  }\n\n  setTrack(trackName, trackFile, trackNumber) {\n    this.setState({\n      selectedTrack: null,\n      selectedTrackName: trackName,\n      selectedTrackFile: trackFile,\n      //trackFile\n      selectedTrackNumber: trackNumber,\n      player: \"playing\",\n      duration: this.player.duration\n    }, function () {\n      console.log(this.state.selectedTrackNumber);\n    });\n    this.player.play();\n  }\n\n  componentDidMount() {\n    this.player.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.player.removeEventListener(\"timeupdate\", () => {});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTrackFile !== prevState.selectedTrackFile) {\n      let track = this.state.selectedTrackFile; // if (track) {\n\n      this.player.src = track;\n      this.player.play();\n      this.setState({\n        player: \"playing\",\n        duration: this.player.duration,\n        selectedTrackNumber: 'track-1'\n      }); //  }\n    }\n\n    if (this.state.player !== prevState.player) {\n      if (this.state.player === \"paused\") {\n        this.player.pause();\n      } else if (this.state.player === \"stopped\") {\n        this.player.pause();\n        this.player.currentTime = 0;\n        this.setState({\n          selectedTrackFile: null\n        });\n      } else if (this.state.player === \"playing\" && prevState.player === \"paused\") {\n        this.player.play();\n      }\n    }\n  }\n\n  static async getInitialProps() {\n    const response = await getHomePageAPI({\n      pageSize: 1\n    });\n    return {\n      home: response.results\n    };\n  }\n\n  render() {\n    function handleChange(newValue) {\n      setValue(newValue);\n    }\n\n    const currentTime = getTime(this.state.currentTime);\n    const duration = getTime(this.state.duration);\n    let tracklistData = this.props.home[0].data.body.find(slice => slice.slice_type == \"tracklist\").items;\n    return __jsx(DefaultLayout, null, this.props.home.map(homepage => __jsx(\"div\", null, this.state.player === \"playing\" || this.state.player === \"paused\" ? __jsx(\"div\", null, currentTime, \" / \", duration) : \"\", __jsx(\"div\", {\n      className: \"row\"\n    }, homepage.data.body.map(slice => slice.slice_type == \"profile_card\" && __jsx(ProfileCard, {\n      profile: slice.primary\n    })), homepage.data.body.map(slice => slice.slice_type == \"tracklist\" && __jsx(TracksCard, {\n      setTrack: this.setTrack,\n      state: this,\n      trackSource: slice.items\n    }))), __jsx(\"audio\", {\n      ref: ref => this.player = ref\n    }))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Moustapha Camara/Dropbox/MOUST MUSIC/HeEqualsMCSquared Website/Development/heequalsmcsquared/pages/index.js"],"names":["Link","getHomePageAPI","getBlogPostsAPI","linkResolver","RichText","React","Component","ProfileCard","TracksCard","DefaultLayout","getTime","time","isNaN","Math","floor","slice","Index","constructor","props","setTrack","bind","state","value","selectedTrack","selectedTrackName","selectedTrackNumber","selectedTrackFile","player","currentTime","duration","trackName","trackFile","trackNumber","setState","console","log","play","componentDidMount","addEventListener","e","target","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","track","src","pause","getInitialProps","response","pageSize","home","results","render","handleChange","newValue","setValue","tracklistData","data","body","find","slice_type","items","map","homepage","primary","ref"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { getHomePageAPI, getBlogPostsAPI } from '../api';\r\n// We create this in just a tick\r\nimport { linkResolver } from '../helpers';\r\n\r\nimport { RichText } from 'prismic-reactjs';\r\n\r\n\r\nimport React, { Component } from 'react'\r\n\r\nimport ProfileCard from '../components/ProfileCard.js';\r\nimport TracksCard from '../components/TracksCard.js';\r\n\r\n/**\r\n* As you can see we are importing our layout here,\r\n* and below we wrap all of the page in it.\r\n*/\r\nimport DefaultLayout from '../layouts';\r\n\r\n\r\n\r\nfunction getTime(time) {\r\n  if (!isNaN(time)) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Index extends React.Component {\r\n     constructor(props) {\r\n        super(props)\r\n\r\n\r\n\r\n        this.setTrack = this.setTrack.bind(this);\r\n\r\n        this.state = {\r\n          value: null,\r\n          selectedTrack: null,\r\n          selectedTrackName:'default',\r\n          selectedTrackNumber: null,\r\n          selectedTrackFile: null,\r\n          player: \"stopped\",\r\n          currentTime: null,\r\n          duration: null\r\n        };\r\n\r\n      }\r\n\r\n      setTrack(trackName, trackFile, trackNumber) {\r\n\r\n           this.setState({\r\n                selectedTrack: null,\r\n                selectedTrackName: trackName,\r\n                selectedTrackFile: trackFile, //trackFile\r\n                selectedTrackNumber: trackNumber,\r\n                player: \"playing\", \r\n                duration: this.player.duration\r\n           }, function () {\r\n                console.log(this.state.selectedTrackNumber);\r\n           });\r\n\r\n            this.player.play();\r\n\r\n      }\r\n  \r\n\r\n\r\n    componentDidMount() {\r\n      this.player.addEventListener(\"timeupdate\", e => {\r\n        this.setState({\r\n          currentTime: e.target.currentTime,\r\n          duration: e.target.duration\r\n        });\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.player.removeEventListener(\"timeupdate\", () => {});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (this.state.selectedTrackFile !== prevState.selectedTrackFile) {\r\n        let track = this.state.selectedTrackFile;\r\n\r\n       // if (track) {\r\n          this.player.src = track;\r\n          this.player.play();\r\n          this.setState({ player: \"playing\", duration: this.player.duration,  selectedTrackNumber: 'track-1'});\r\n      //  }\r\n      }\r\n      if (this.state.player !== prevState.player) {\r\n        if (this.state.player === \"paused\") {\r\n          this.player.pause();\r\n        } else if (this.state.player === \"stopped\") {\r\n          this.player.pause();\r\n          this.player.currentTime = 0;\r\n          this.setState({ selectedTrackFile: null });\r\n        } else if (\r\n          this.state.player === \"playing\" &&\r\n          prevState.player === \"paused\"\r\n        ) {\r\n          this.player.play();\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  static async getInitialProps() {\r\n    const response = await getHomePageAPI({ pageSize: 1 });\r\n     return {\r\n      home: response.results\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    function handleChange(newValue) {\r\n      setValue(newValue);\r\n    }\r\n\r\n\r\n    const currentTime = getTime(this.state.currentTime);\r\n    const duration = getTime(this.state.duration);\r\n\r\n    let tracklistData = this.props.home[0].data.body.find(slice => slice.slice_type == \"tracklist\").items;\r\n\r\n\r\n    return (\r\n        <DefaultLayout>\r\n            {this.props.home.map(homepage => (\r\n              <div>\r\n\r\n                {this.state.player === \"playing\" || this.state.player === \"paused\" ? (\r\n                  <div>\r\n                    {currentTime} / {duration}\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n              \r\n                 <div className=\"row\">\r\n                    {homepage.data.body.map(slice => slice.slice_type == \"profile_card\" && <ProfileCard profile={slice.primary} />)}              \r\n                    {homepage.data.body.map(slice => slice.slice_type == \"tracklist\" && <TracksCard setTrack={this.setTrack} state={this} trackSource={slice.items} />)}  \r\n                 </div>\r\n\r\n\r\n\r\n                    <audio ref={ref => (this.player = ref)} />\r\n                </div>\r\n              ))}\r\n        </DefaultLayout>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}