{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { RichText } from 'prismic-reactjs';\n\nlet TrackSingle = props => {\n  const {\n    0: selectedTrack,\n    1: setSelectedTrack\n  } = useState();\n\n  let trackChange = () => {\n    return console.log(selectedTrack) /// setSelectedTrack(props.trackName)\n    ;\n  };\n\n  console.log(selectedTrack);\n  return __jsx(\"li\", {\n    onClick: () => trackChange(),\n    className: selectedTrack && selectedTrack[0].track_title.text === props.trackName ? ' tracklist-card__list-active-track' : ''\n  }, __jsx(\"i\", {\n    className: \"material-icons\",\n    style: {\n      fontSize: '20px'\n    }\n  }, \"play_arrow\"), \" \", __jsx(\"span\", {\n    className: \"mb-0\"\n  }, RichText.asText(props.trackName)));\n};\n\nexport default TrackSingle;","map":{"version":3,"sources":["C:/Users/Moustapha Camara/Dropbox/MOUST MUSIC/HeEqualsMCSquared Website/Development/heequalsmcsquared/components/TrackSingle.js"],"names":["React","Component","useState","RichText","TrackSingle","props","selectedTrack","setSelectedTrack","trackChange","console","log","track_title","text","trackName","fontSize","asText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAGA,SAASC,QAAT,QAAyB,iBAAzB;;AAGA,IAAIC,WAAW,GAAGC,KAAK,IAAI;AAG1B,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCL,QAAQ,EAAlD;;AAEA,MAAIM,WAAW,GAAG,MAAM;AACvB,WACCC,OAAO,CAACC,GAAR,CAAYJ,aAAZ,CADD,CAEC;AAFD;AAIA,GALD;;AAOAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AAEA,SACC;AAAK,IAAA,OAAO,EAAG,MAAME,WAAW,EAAhC;AAAqC,IAAA,SAAS,EAAEF,aAAa,IAAIA,aAAa,CAAC,CAAD,CAAb,CAAiBK,WAAjB,CAA6BC,IAA7B,KAAsCP,KAAK,CAACQ,SAA7D,GAAyE,oCAAzE,GAAgH;AAAhK,KACE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAA8B,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAE;AAAX;AAArC,kBADF,OAC0E;AAAM,IAAA,SAAS,EAAC;AAAhB,KAAwBX,QAAQ,CAACY,MAAT,CAAgBV,KAAK,CAACQ,SAAtB,CAAxB,CAD1E,CADD;AAKA,CAnBD;;AAqBA,eAAeT,WAAf","sourcesContent":["import React, { Component, useState } from 'react';\r\n\r\n\r\nimport { RichText } from 'prismic-reactjs';\r\n\r\n\r\nlet TrackSingle = props => {\r\n\r\n\r\n\tconst [selectedTrack, setSelectedTrack] = useState();\r\n\r\n\tlet trackChange = () => {\r\n\t\treturn (\r\n\t\t\tconsole.log(selectedTrack)\r\n\t\t\t/// setSelectedTrack(props.trackName)\r\n\t\t)\r\n\t}\r\n\r\n\tconsole.log(selectedTrack)\r\n\r\n\treturn (\r\n\t\t<li  onClick={ () => trackChange() } className={selectedTrack && selectedTrack[0].track_title.text === props.trackName ? ' tracklist-card__list-active-track' : ''}>\r\n\t\t \t<i className=\"material-icons\" style={{fontSize: '20px'}}>play_arrow</i> <span className=\"mb-0\">{RichText.asText(props.trackName)}</span>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default TrackSingle;"]},"metadata":{},"sourceType":"module"}