{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Link from 'next/link';\nimport { getHomePageAPI, getBlogPostsAPI } from '../api'; // We create this in just a tick\n\nimport { linkResolver } from '../helpers';\nimport { RichText } from 'prismic-reactjs';\nimport ReactPlayer from 'react-player';\nimport React, { Component } from 'react';\nimport ProfileCard from '../components/ProfileCard.js';\nimport TracksCard from '../components/TracksCard.js';\n/**\r\n* As you can see we are importing our layout here,\r\n* and below we wrap all of the page in it.\r\n*/\n\nimport DefaultLayout from '../layouts';\n\nfunction getTime(time) {\n  if (!isNaN(time)) {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }\n}\n\nvar Index = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.setTrack = _this.setTrack.bind(_assertThisInitialized(_this));\n    _this.state = {\n      selectedTrackName: null,\n      selectedTrackNumber: null,\n      selectedTrackFile: null,\n      player: \"stopped\",\n      currentTime: null,\n      duration: null\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"setTrack\",\n    value: function setTrack(trackName, trackFile, trackNumber) {\n      this.setState({\n        selectedTrackName: trackName,\n        selectedTrackFile: trackFile,\n        //trackFile\n        selectedTrackNumber: trackNumber,\n        player: \"playing\",\n        duration: this.player.duration\n      }, function () {\n        console.log(this.state.selectedTrackName[0].text);\n      });\n      this.player.play();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.player.addEventListener(\"timeupdate\", function (e) {\n        _this2.setState({\n          currentTime: e.target.currentTime,\n          duration: e.target.duration\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.player.removeEventListener(\"timeupdate\", function () {});\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.state.selectedTrackFile !== prevState.selectedTrackFile) {\n        var track = this.state.selectedTrackFile; // if (track) {\n\n        this.player.src = track;\n        this.player.play();\n        this.setState({\n          player: \"playing\",\n          duration: this.player.duration\n        }); //  }\n      }\n\n      if (this.state.player !== prevState.player) {\n        if (this.state.player === \"paused\") {\n          this.player.pause();\n        } else if (this.state.player === \"stopped\") {\n          this.player.pause();\n          this.player.currentTime = 0;\n          this.setState({\n            selectedTrackFile: null\n          });\n        } else if (this.state.player === \"playing\" && prevState.player === \"paused\") {\n          this.player.play();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var currentTime = getTime(this.state.currentTime);\n      var duration = getTime(this.state.duration);\n      var tracklistData = this.props.home[0].data.body.find(function (slice) {\n        return slice.slice_type == \"tracklist\";\n      }).items;\n      return __jsx(DefaultLayout, null, this.props.home.map(function (homepage) {\n        return __jsx(\"div\", null, __jsx(\"div\", null, _this3.state.player === \"paused\" && __jsx(\"button\", {\n          onClick: function onClick() {\n            return _this3.setState({\n              player: \"playing\"\n            });\n          }\n        }, \"Play\"), _this3.state.player === \"playing\" && __jsx(\"button\", {\n          onClick: function onClick() {\n            return _this3.setState({\n              player: \"paused\"\n            });\n          }\n        }, \"Pause\"), _this3.state.player === \"playing\" || _this3.state.player === \"paused\" ? __jsx(\"button\", {\n          onClick: function onClick() {\n            return _this3.setState({\n              player: \"stopped\"\n            });\n          }\n        }, \"Stop\") : \"\"), _this3.state.player === \"playing\" || _this3.state.player === \"paused\" ? __jsx(\"div\", null, currentTime, \" / \", duration) : \"\", __jsx(\"div\", {\n          className: \"row\"\n        }, homepage.data.body.map(function (slice) {\n          return slice.slice_type == \"profile_card\" && __jsx(ProfileCard, {\n            profile: slice.primary\n          });\n        }), homepage.data.body.map(function (slice) {\n          return slice.slice_type == \"tracklist\" && __jsx(TracksCard, {\n            setTrack: _this3.setTrack,\n            state: _this3,\n            trackSource: slice.items\n          });\n        })), __jsx(\"audio\", {\n          ref: function ref(_ref) {\n            return _this3.player = _ref;\n          }\n        }));\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var response;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getHomePageAPI({\n                pageSize: 1\n              }));\n\n            case 2:\n              response = _context.sent;\n              return _context.abrupt(\"return\", {\n                home: response.results\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Moustapha Camara/Dropbox/MOUST MUSIC/HeEqualsMCSquared Website/Development/heequalsmcsquared/pages/index.js"],"names":["Link","getHomePageAPI","getBlogPostsAPI","linkResolver","RichText","ReactPlayer","React","Component","ProfileCard","TracksCard","DefaultLayout","getTime","time","isNaN","Math","floor","slice","Index","props","setTrack","bind","state","selectedTrackName","selectedTrackNumber","selectedTrackFile","player","currentTime","duration","trackName","trackFile","trackNumber","setState","console","log","text","play","addEventListener","e","target","removeEventListener","prevProps","prevState","track","src","pause","tracklistData","home","data","body","find","slice_type","items","map","homepage","primary","ref","pageSize","response","results"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { getHomePageAPI, getBlogPostsAPI } from '../api';\r\n// We create this in just a tick\r\nimport { linkResolver } from '../helpers';\r\n\r\nimport { RichText } from 'prismic-reactjs';\r\n\r\nimport ReactPlayer from 'react-player';\r\n\r\nimport React, { Component } from 'react'\r\n\r\nimport ProfileCard from '../components/ProfileCard.js';\r\nimport TracksCard from '../components/TracksCard.js';\r\n\r\n/**\r\n* As you can see we are importing our layout here,\r\n* and below we wrap all of the page in it.\r\n*/\r\nimport DefaultLayout from '../layouts';\r\n\r\n\r\n\r\nfunction getTime(time) {\r\n  if (!isNaN(time)) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Index extends React.Component {\r\n     constructor(props) {\r\n        super(props)\r\n\r\n        this.setTrack = this.setTrack.bind(this);\r\n\r\n        this.state = {\r\n          selectedTrackName: null,\r\n          selectedTrackNumber: null,\r\n          selectedTrackFile: null,\r\n          player: \"stopped\",\r\n          currentTime: null,\r\n          duration: null\r\n        };\r\n\r\n      }\r\n\r\n      setTrack(trackName, trackFile, trackNumber) {\r\n\r\n           this.setState({\r\n                selectedTrackName: trackName,\r\n                selectedTrackFile: trackFile, //trackFile\r\n                selectedTrackNumber: trackNumber,\r\n                player: \"playing\", \r\n                duration: this.player.duration\r\n           }, function () {\r\n                console.log(this.state.selectedTrackName[0].text);\r\n           });\r\n\r\n            this.player.play();\r\n\r\n      }\r\n  \r\n\r\n\r\n    componentDidMount() {\r\n      this.player.addEventListener(\"timeupdate\", e => {\r\n        this.setState({\r\n          currentTime: e.target.currentTime,\r\n          duration: e.target.duration\r\n        });\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.player.removeEventListener(\"timeupdate\", () => {});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (this.state.selectedTrackFile !== prevState.selectedTrackFile) {\r\n        let track = this.state.selectedTrackFile;\r\n\r\n       // if (track) {\r\n          this.player.src = track;\r\n          this.player.play();\r\n          this.setState({ player: \"playing\", duration: this.player.duration });\r\n      //  }\r\n      }\r\n      if (this.state.player !== prevState.player) {\r\n        if (this.state.player === \"paused\") {\r\n          this.player.pause();\r\n        } else if (this.state.player === \"stopped\") {\r\n          this.player.pause();\r\n          this.player.currentTime = 0;\r\n          this.setState({ selectedTrackFile: null });\r\n        } else if (\r\n          this.state.player === \"playing\" &&\r\n          prevState.player === \"paused\"\r\n        ) {\r\n          this.player.play();\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  static async getInitialProps() {\r\n    const response = await getHomePageAPI({ pageSize: 1 });\r\n     return {\r\n      home: response.results\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n\r\n    const currentTime = getTime(this.state.currentTime);\r\n    const duration = getTime(this.state.duration);\r\n\r\n    let tracklistData = this.props.home[0].data.body.find(slice => slice.slice_type == \"tracklist\").items;\r\n\r\n\r\n    return (\r\n        <DefaultLayout>\r\n            {this.props.home.map(homepage => (\r\n              <div>\r\n\r\n                <div>\r\n                  {this.state.player === \"paused\" && (\r\n                    <button onClick={() => this.setState({ player: \"playing\" })}>\r\n                      Play\r\n                    </button>\r\n                  )}\r\n                  {this.state.player === \"playing\" && (\r\n                    <button onClick={() => this.setState({ player: \"paused\" })}>\r\n                      Pause\r\n                    </button>\r\n                  )}\r\n                  {this.state.player === \"playing\" || this.state.player === \"paused\" ? (\r\n                    <button onClick={() => this.setState({ player: \"stopped\" })}>\r\n                      Stop\r\n                    </button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                {this.state.player === \"playing\" || this.state.player === \"paused\" ? (\r\n                  <div>\r\n                    {currentTime} / {duration}\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n\r\n                 <div className=\"row\">\r\n                    {homepage.data.body.map(slice => slice.slice_type == \"profile_card\" && <ProfileCard profile={slice.primary} />)}              \r\n                    {homepage.data.body.map(slice => slice.slice_type == \"tracklist\" && <TracksCard setTrack={this.setTrack} state={this} trackSource={slice.items} />)}  \r\n                 </div>\r\n\r\n\r\n\r\n                    <audio ref={ref => (this.player = ref)} />\r\n                </div>\r\n              ))}\r\n        </DefaultLayout>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}