{"ast":null,"code":"var __jsx = React.createElement;\nimport Link from 'next/link';\nimport { getHomePageAPI, getBlogPostsAPI } from '../api'; // We create this in just a tick\n\nimport { linkResolver } from '../helpers';\nimport { RichText } from 'prismic-reactjs';\nimport ReactPlayer from 'react-player';\nimport React, { Component } from 'react';\nimport ProfileCard from '../components/ProfileCard.js';\nimport TracksCard from '../components/TracksCard.js';\n/**\r\n* As you can see we are importing our layout here,\r\n* and below we wrap all of the page in it.\r\n*/\n\nimport DefaultLayout from '../layouts';\n\nfunction getTime(time) {\n  if (!isNaN(time)) {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  }\n}\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setTrack = this.setTrack.bind(this);\n    this.state = {\n      selectedTrack: null,\n      player: \"stopped\",\n      currentTime: null,\n      duration: null\n    };\n  }\n\n  setTrack(trackFile) {\n    this.setState({\n      selectedTrack: \"https://prismic-io.s3.amazonaws.com/heequalsmcsqaured/90dec21a-b627-4ccc-bd1d-0124cf9d447a_Celebration.mp3\",\n      //trackFile\n      player: \"playing\",\n      duration: this.player.duration\n    });\n    this.player.play();\n  }\n\n  componentDidMount() {\n    this.player.addEventListener(\"timeupdate\", e => {\n      this.setState({\n        currentTime: e.target.currentTime,\n        duration: e.target.duration\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.player.removeEventListener(\"timeupdate\", () => {});\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selectedTrack !== prevState.selectedTrack) {\n      let track;\n\n      switch (this.state.selectedTrack) {\n        case \"I'm Feelin It\":\n          track = 'https://prismic-io.s3.amazonaws.com/heequalsmcsqaured/f767c674-8925-418e-921c-49b7dbd0ac1d_I%27m+Feelin+It.mp3';\n          break;\n\n        case \"Celebration\":\n          track = 'https://prismic-io.s3.amazonaws.com/heequalsmcsqaured/90dec21a-b627-4ccc-bd1d-0124cf9d447a_Celebration.mp3';\n          break;\n\n        default:\n          break;\n      }\n\n      if (track) {\n        this.player.src = track;\n        this.player.play();\n        this.setState({\n          player: \"playing\",\n          duration: this.player.duration\n        });\n      }\n    }\n\n    if (this.state.player !== prevState.player) {\n      if (this.state.player === \"paused\") {\n        this.player.pause();\n      } else if (this.state.player === \"stopped\") {\n        this.player.pause();\n        this.player.currentTime = 0;\n        this.setState({\n          selectedTrack: null\n        });\n      } else if (this.state.player === \"playing\" && prevState.player === \"paused\") {\n        this.player.play();\n      }\n    }\n  }\n\n  static async getInitialProps() {\n    const response = await getHomePageAPI({\n      pageSize: 1\n    });\n    return {\n      home: response.results\n    };\n  }\n\n  render() {\n    const currentTime = getTime(this.state.currentTime);\n    const duration = getTime(this.state.duration);\n    let tracklistData = this.props.home[0].data.body.find(slice => slice.slice_type == \"tracklist\").items;\n    return __jsx(DefaultLayout, null, this.props.home.map(homepage => __jsx(\"div\", null, __jsx(\"div\", null, this.state.player === \"paused\" && __jsx(\"button\", {\n      onClick: () => this.setState({\n        player: \"playing\"\n      })\n    }, \"Play\"), this.state.player === \"playing\" && __jsx(\"button\", {\n      onClick: () => this.setState({\n        player: \"paused\"\n      })\n    }, \"Pause\"), this.state.player === \"playing\" || this.state.player === \"paused\" ? __jsx(\"button\", {\n      onClick: () => this.setState({\n        player: \"stopped\"\n      })\n    }, \"Stop\") : \"\"), this.state.player === \"playing\" || this.state.player === \"paused\" ? __jsx(\"div\", null, currentTime, \" / \", duration) : \"\", __jsx(\"ul\", null, tracklistData.map((track, index) => {\n      return __jsx(\"li\", {\n        key: 'track_' + index,\n        onClick: () => this.setState({\n          selectedTrack: RichText.asText(track.track_title)\n        })\n      }, RichText.asText(track.track_title));\n    })), __jsx(\"div\", {\n      className: \"row\"\n    }, homepage.data.body.map(slice => slice.slice_type == \"profile_card\" && __jsx(ProfileCard, {\n      profile: slice.primary\n    })), homepage.data.body.map(slice => slice.slice_type == \"tracklist\" && __jsx(TracksCard, {\n      setTrack: this.setTrack,\n      state: this,\n      trackSource: slice.items\n    }))), __jsx(\"audio\", {\n      ref: ref => this.player = ref\n    }))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Moustapha Camara/Dropbox/MOUST MUSIC/HeEqualsMCSquared Website/Development/heequalsmcsquared/pages/index.js"],"names":["Link","getHomePageAPI","getBlogPostsAPI","linkResolver","RichText","ReactPlayer","React","Component","ProfileCard","TracksCard","DefaultLayout","getTime","time","isNaN","Math","floor","slice","Index","constructor","props","setTrack","bind","state","selectedTrack","player","currentTime","duration","trackFile","setState","play","componentDidMount","addEventListener","e","target","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","track","src","pause","getInitialProps","response","pageSize","home","results","render","tracklistData","data","body","find","slice_type","items","map","homepage","index","asText","track_title","primary","ref"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { getHomePageAPI, getBlogPostsAPI } from '../api';\r\n// We create this in just a tick\r\nimport { linkResolver } from '../helpers';\r\n\r\nimport { RichText } from 'prismic-reactjs';\r\n\r\nimport ReactPlayer from 'react-player';\r\n\r\nimport React, { Component } from 'react'\r\n\r\nimport ProfileCard from '../components/ProfileCard.js';\r\nimport TracksCard from '../components/TracksCard.js';\r\n\r\n/**\r\n* As you can see we are importing our layout here,\r\n* and below we wrap all of the page in it.\r\n*/\r\nimport DefaultLayout from '../layouts';\r\n\r\n\r\n\r\nfunction getTime(time) {\r\n  if (!isNaN(time)) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass Index extends React.Component {\r\n     constructor(props) {\r\n        super(props)\r\n\r\n        this.setTrack = this.setTrack.bind(this);\r\n\r\n        this.state = {\r\n          selectedTrack: null,\r\n          player: \"stopped\",\r\n          currentTime: null,\r\n          duration: null\r\n        };\r\n\r\n      }\r\n\r\n      setTrack(trackFile) {\r\n\r\n\r\n           this.setState({\r\n                selectedTrack: \"https://prismic-io.s3.amazonaws.com/heequalsmcsqaured/90dec21a-b627-4ccc-bd1d-0124cf9d447a_Celebration.mp3\", //trackFile\r\n                player: \"playing\", \r\n                duration: this.player.duration\r\n           });\r\n            this.player.play();\r\n\r\n\r\n      }\r\n  \r\n\r\n\r\n    componentDidMount() {\r\n      this.player.addEventListener(\"timeupdate\", e => {\r\n        this.setState({\r\n          currentTime: e.target.currentTime,\r\n          duration: e.target.duration\r\n        });\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.player.removeEventListener(\"timeupdate\", () => {});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      if (this.state.selectedTrack !== prevState.selectedTrack) {\r\n        let track;\r\n\r\n        switch (this.state.selectedTrack) {\r\n          case \"I'm Feelin It\":\r\n            track = 'https://prismic-io.s3.amazonaws.com/heequalsmcsqaured/f767c674-8925-418e-921c-49b7dbd0ac1d_I%27m+Feelin+It.mp3';\r\n            break;\r\n          case \"Celebration\":\r\n            track = 'https://prismic-io.s3.amazonaws.com/heequalsmcsqaured/90dec21a-b627-4ccc-bd1d-0124cf9d447a_Celebration.mp3';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        if (track) {\r\n          this.player.src = track;\r\n          this.player.play();\r\n          this.setState({ player: \"playing\", duration: this.player.duration });\r\n        }\r\n      }\r\n      if (this.state.player !== prevState.player) {\r\n        if (this.state.player === \"paused\") {\r\n          this.player.pause();\r\n        } else if (this.state.player === \"stopped\") {\r\n          this.player.pause();\r\n          this.player.currentTime = 0;\r\n          this.setState({ selectedTrack: null });\r\n        } else if (\r\n          this.state.player === \"playing\" &&\r\n          prevState.player === \"paused\"\r\n        ) {\r\n          this.player.play();\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  static async getInitialProps() {\r\n    const response = await getHomePageAPI({ pageSize: 1 });\r\n     return {\r\n      home: response.results\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n\r\n    const currentTime = getTime(this.state.currentTime);\r\n    const duration = getTime(this.state.duration);\r\n\r\n    let tracklistData = this.props.home[0].data.body.find(slice => slice.slice_type == \"tracklist\").items;\r\n\r\n\r\n    return (\r\n        <DefaultLayout>\r\n            {this.props.home.map(homepage => (\r\n              <div>\r\n\r\n                <div>\r\n                  {this.state.player === \"paused\" && (\r\n                    <button onClick={() => this.setState({ player: \"playing\" })}>\r\n                      Play\r\n                    </button>\r\n                  )}\r\n                  {this.state.player === \"playing\" && (\r\n                    <button onClick={() => this.setState({ player: \"paused\" })}>\r\n                      Pause\r\n                    </button>\r\n                  )}\r\n                  {this.state.player === \"playing\" || this.state.player === \"paused\" ? (\r\n                    <button onClick={() => this.setState({ player: \"stopped\" })}>\r\n                      Stop\r\n                    </button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                {this.state.player === \"playing\" || this.state.player === \"paused\" ? (\r\n                  <div>\r\n                    {currentTime} / {duration}\r\n                  </div>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n\r\n                 <ul>\r\n                       {tracklistData.map((track, index) => {\r\n                              return (\r\n                                <li\r\n                                  key={'track_' + index}\r\n                                  onClick={() => this.setState({ selectedTrack: RichText.asText(track.track_title) })}\r\n                                >\r\n                                  {RichText.asText(track.track_title)}\r\n                                </li>\r\n                              );\r\n                        })}\r\n                  \r\n                </ul>\r\n               \r\n\r\n                 <div className=\"row\">\r\n                    {homepage.data.body.map(slice => slice.slice_type == \"profile_card\" && <ProfileCard profile={slice.primary} />)}              \r\n                    {homepage.data.body.map(slice => slice.slice_type == \"tracklist\" && <TracksCard setTrack={this.setTrack} state={this} trackSource={slice.items} />)}  \r\n                 </div>\r\n\r\n\r\n\r\n                    <audio ref={ref => (this.player = ref)} />\r\n                </div>\r\n              ))}\r\n        </DefaultLayout>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}